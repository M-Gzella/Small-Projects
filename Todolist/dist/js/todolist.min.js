"use strict";var todoInput=document.querySelector(".todo-input"),addBtn=document.querySelector(".add-btn"),todoList=document.querySelector(".todo-list ul"),error=document.querySelector(".alert-info"),popup=document.querySelector(".popup"),submitBtn=document.querySelector(".accept"),cancelBtn=document.querySelector(".cancel"),popupInfo=document.querySelector(".popup-info"),popupInput=document.querySelector(".popup-input"),checkForm=function(t,e){return""===t.value?!(e.textContent="Wypełnij treść zadania"):!(e.textContent="")},createNewTask=function(t){var e=JSON.parse(localStorage.getItem("data"));e.push({name:t,status:"active"}),localStorage.setItem("data",JSON.stringify(e))},refreshTaskList=function(){todoList.innerHTML="";var t=JSON.parse(localStorage.getItem("data")),t=(0===t.length?error.textContent="Brak zadań na liście":error.textContent="",t.forEach(function(t,e){var a=document.createElement("li");a.setAttribute("id",e),a.classList.add(t.status),a.innerHTML="\n            ".concat(t.name,'\n            <div class="tools">\n                <button data-id=\'').concat(e,'\' class="complete"><i class="fas fa-check"></i></button>\n                <button data-id=\'').concat(e,"' class=\"edit\">EDIT</button>\n                <button data-id='").concat(e,'\' class="delete"><i class="fas fa-times"></i></button>\n            </div>\n        '),todoList.append(a)}),document.querySelectorAll(".tools .complete")),e=document.querySelectorAll(".tools .delete"),a=document.querySelectorAll(".tools .edit");t.forEach(function(t){return t.addEventListener("click",function(){setTaskStatus(this.dataset.id)})}),e.forEach(function(t){return t.addEventListener("click",function(){deleteTask(this.dataset.id)})}),a.forEach(function(t){return t.addEventListener("click",function(){showEditPopup(this.dataset.id)})})},setTaskStatus=function(t){var e=JSON.parse(localStorage.getItem("data")),a=e[t];"completed"===a.status?a.status="active":a.status="completed",e[t]=a,localStorage.setItem("data",JSON.stringify(e)),refreshTaskList()},deleteTask=function(t){var e=JSON.parse(localStorage.getItem("data"));e.splice(t,1),localStorage.setItem("data",JSON.stringify(e)),refreshTaskList()},changeTask=function(t,e){var a=JSON.parse(localStorage.getItem("data")),o=a[t];o.name=e,a[t]=o,localStorage.setItem("data",JSON.stringify(a)),refreshTaskList()},showEditPopup=function(t){popup.style.display="flex",popup.setAttribute("data-id",t)},closePopup=function(){popup.style.display="none",popupInfo.textContent=""},checkJSON=function(t){try{JSON.parse(t)}catch(t){return!1}return!0};addBtn.addEventListener("click",function(){checkForm(todoInput,error)&&(createNewTask(todoInput.value),refreshTaskList(),todoInput.value="")}),submitBtn.addEventListener("click",function(t){checkForm(popupInput,popupInfo)&&(changeTask(popup.dataset.id,popupInput.value),refreshTaskList(),popupInput.value="",closePopup())}),cancelBtn.addEventListener("click",closePopup),todoInput.addEventListener("keyup",function(t){"Enter"===t.key&&checkForm(todoInput,error)&&(createNewTask(todoInput.value),refreshTaskList(),todoInput.value="")}),window.addEventListener("DOMContentLoaded",function(){var t;localStorage.getItem("data")&&0!==(t=localStorage.getItem("data")).length&&checkJSON(t)&&Array.isArray(JSON.parse(t))||localStorage.setItem("data",JSON.stringify([])),refreshTaskList()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
